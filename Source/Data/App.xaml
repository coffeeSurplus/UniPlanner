<Application x:Class="UniPlanner.Source.Data.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:converter="clr-namespace:UniPlanner.Source.Converters"
			 xmlns:icon="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
			 StartupUri="/UniPlanner;component/Source/Views/MainWindow.xaml">
	<Application.Resources>
		<converter:GeneralBoolToBoolInvertedConverter x:Key="GeneralBoolToBoolInverted"/>
		<converter:GeneralBoolToVisibilityConverter x:Key="GeneralBoolToVisibility"/>
		<converter:GeneralBoolToVisibilityInvertedConverter x:Key="GeneralBoolToVisibilityInverted"/>
		<converter:GeneralDateOnlyToIntConverter x:Key="GeneralDateOnlyToInt"/>
		<converter:GeneralIntToColourConverter x:Key="GeneralIntToColour"/>
		<converter:GeneralIntToVisibilityConverter x:Key="GeneralIntToVisibility"/>
		<converter:GeneralRadioToIntConverter x:Key="GeneralRadioToInt"/>
		<converter:GeneralRadioToStringConverter x:Key="GeneralRadioToString"/>
		<converter:GeneralTodayConverter x:Key="GeneralToday"/>
		<converter:MainWindowBorderWidthConverter x:Key="MainWindowBorderWidth"/>
		<converter:MainWindowMaximisedConverter x:Key="MainWindowMaximised"/>
		<converter:MainWindowSidepanelTextConverter x:Key="MainWindowSidepanelText"/>
		<converter:MainWindowSidepanelTextSizeConverter x:Key="MainWindowSidepanelTextSize"/>
		<converter:MainWindowSidepanelWidthConverter x:Key="MainWindowSidepanelWidth"/>
		<converter:MainWindowTitleConverter x:Key="MainWindowTitle"/>
		<converter:HomeDateConverter x:Key="HomeDate"/>
		<converter:HomeEventCountConverter x:Key="HomeEventCount"/>
		<converter:HomeEventTitleConverter x:Key="HomeEventTitle"/>
		<converter:HomeTaskCountConverter x:Key="HomeTaskCount"/>
		<converter:HomeTimetableCountConverter x:Key="HomeTimetableCount"/>
		<converter:HomeUsernameConverter x:Key="HomeUsername"/>
		<converter:TimetableCurrentDayConverter x:Key="TimetableCurrentDay"/>
		<converter:TimetableLengthConverter x:Key="TimetableLength"/>
		<converter:TimetableMarginConverter x:Key="TimetableMargin"/>
		<converter:TimetableSubheaderConverter x:Key="TimetableSubheader"/>
		<converter:TimetableSubtitleConverter x:Key="TimetableSubtitle"/>
		<converter:TimetableSubtitleVisibilityConverter x:Key="TimetableSubtitleVisibility"/>
		<converter:TimetableTitleConverter x:Key="TimetableTitle"/>
		<converter:TaskColourConverter x:Key="TaskColour"/>
		<converter:TaskPriorityConverter x:Key="TaskPriority"/>
		<converter:TaskStrikethroughConverter x:Key="TaskStrikethrough"/>
		<converter:TaskSubheaderConverter x:Key="TaskSubheader"/>
		<converter:TaskSubtitleConverter x:Key="TaskSubtitle"/>
		<converter:TaskSubtitleVisibilityConverter x:Key="TaskSubtitleVisibility"/>
		<converter:SubtaskCollectionViewConverter x:Key="SubtaskCollectionView"/>
		<converter:SubtaskRemoveConverter x:Key="SubtaskRemove"/>
		<converter:EventCurrentDateConverter x:Key="EventCurrentDate"/>
		<converter:EventCurrentDayConverter x:Key="EventCurrentDay"/>
		<converter:EventCurrentMonthConverter x:Key="EventCurrentMonth"/>
		<converter:EventCurrentWeekConverter x:Key="EventCurrentWeek"/>
		<converter:EventLengthConverter	 x:Key="EventLength"/>
		<converter:EventMarginConverter x:Key="EventMargin"/>
		<converter:EventMonthColumnConverter x:Key="EventMonthColumn"/>
		<converter:EventMonthCurrentDateConverter x:Key="EventMonthCurrentDate"/>
		<converter:EventMonthDateConverter x:Key="EventMonthDate"/>
		<converter:EventMonthRowConverter x:Key="EventMonthRow"/>
		<converter:EventSubtitleConverter x:Key="EventSubtitle"/>
		<converter:EventSubtitleVisibilityConverter x:Key="EventSubtitleVisibility"/>
		<converter:EventTitleConverter x:Key="EventTitle"/>
		<converter:EventTodayDateConverter x:Key="EventTodayDate"/>
		<converter:EventWeekDateConverter x:Key="EventWeekDate"/>
		<converter:LinkExpanderBindingConverter x:Key="LinkExpanderBinding"/>
		<converter:LinkExpanderVisibilityConverter x:Key="LinkExpanderVisibility"/>
		<converter:LinkMarginConverter x:Key="LinkMargin"/>
		<converter:TimersResetRestartTextConverter x:Key="TimersResetRestartText"/>
		<converter:TimersSelectedBreakConverter x:Key="TimersSelectedBreak"/>
		<converter:TimersSelectedPomodoroConverter x:Key="TimersSelectedPomodoro"/>
		<converter:TimersStatusConverter x:Key="TimersStatus"/>
		<Style TargetType="Border" x:Key="IndentPanel">
			<Setter Property="BorderBrush" Value="#E5E5E5"/>
			<Setter Property="BorderThickness" Value="5,0,0,0"/>
			<Setter Property="Margin" Value="45,0,5,0"/>
		</Style>
		<Style TargetType="Border" x:Key="Panel">
			<Setter Property="Background" Value="#FFFFFF"/>
			<Setter Property="CornerRadius" Value="5"/>
			<Setter Property="Padding" Value="5"/>
		</Style>
		<Style TargetType="Border" x:Key="SidePanel">
			<Setter Property="Background" Value="#19223F"/>
		</Style>
		<Style TargetType="Button">
			<Setter Property="Background" Value="#19223F"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<TextBlock Text="{TemplateBinding Property=Content}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#070D23"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="Foreground" Value="#FFFFFF"/>
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Button" x:Key="AddButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Opacity" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="#E5E5E5">
							<Grid>
								<Line X1="0" X2="12" Y1="0" Y2="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
								<Line X1="0" X2="0" Y1="0" Y2="12" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="100"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="ArrowDownButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="25"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Width" Value="50"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Polygon x:Name="Arrow" Points="0,0 25,25 50,0" Fill="#19223F"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Fill" Value="#070D23" TargetName="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="ArrowLeftButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="Width" Value="20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Polygon x:Name="Arrow" Points="0,15 20,0 20,30" Fill="#19223F"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Fill" Value="#070D23" TargetName="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="ArrowRightButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="Width" Value="20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Polygon x:Name="Arrow" Points="20,15 0,0 0,30" Fill="#19223F"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Fill" Value="#070D23" TargetName="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="ArrowUpButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="25"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Width" Value="50"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Polygon x:Name="Arrow" Points="0,25 25,0 50,25" Fill="#19223F"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Fill" Value="#070D23" TargetName="Arrow"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="CloseButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<Grid>
								<Line X1="0" X2="10" Y1="0" Y2="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
								<Line X1="0" X2="10" Y1="10" Y2="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#EC5B5B"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="EditButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Opacity" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="#E5E5E5">
							<Grid>
								<Ellipse Margin="0,0,15,0" Height="4" Width="4" Fill="#19223F"/>
								<Ellipse Margin="0,0,0,0" Height="4" Width="4" Fill="#19223F"/>
								<Ellipse Margin="15,0,0,0" Height="4" Width="4" Fill="#19223F"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="100"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="EditButtonSmall">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Opacity" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="#E5E5E5">
							<Grid>
								<Ellipse Margin="0,0,11.25,0" Height="3" Width="3" Fill="#19223F"/>
								<Ellipse Margin="0,0,0,0" Height="3" Width="3" Fill="#19223F"/>
								<Ellipse Margin="11.25,0,0,0" Height="3" Width="3" Fill="#19223F"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="100"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="LinkButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border>
							<TextBlock x:Name="Text" Text="{TemplateBinding Property=Content}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Text" Property="TextDecorations" Value="Underline"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="TextBlock">
					<Setter Property="Foreground" Value="#19223F"/>
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Button" x:Key="MinimiseButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<Line X1="0" X2="12" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="PageLeftButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Width" Value="40"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Button" Grid.Column="1" Background="#00000000">
							<Polyline Points="10,0 0,10 10,20" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Button" Property="Background" Value="#E5E5E5"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="PageRightButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Width" Value="40"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Button" Grid.Column="1" Background="#00000000">
							<Polyline Points="0,0 10,10 0,20" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Button" Property="Background" Value="#E5E5E5"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="RemoveButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Opacity" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="#EC5B5B">
							<Grid>
								<Line X1="0" X2="10" Y1="0" Y2="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
								<Line X1="0" X2="10" Y1="10" Y2="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="100"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="RemoveButtonSmall">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Opacity" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="#EC5B5B">
							<Grid>
								<Line X1="0" X2="7.5" Y1="0" Y2="7.5" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
								<Line X1="0" X2="7.5" Y1="7.5" Y2="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Opacity" Value="100"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="StartButton">
			<Setter Property="Background" Value="#80F080"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<TextBlock Text="{TemplateBinding Property=Content}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#5BEC5B"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="Foreground" Value="#008B00"/>
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Button" x:Key="StaticButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Background="{TemplateBinding Property=Background}">
							<ContentPresenter/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" x:Key="StopButton">
			<Setter Property="Background" Value="#F08080"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<TextBlock Text="{TemplateBinding Property=Content}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#EC5B5B"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="Foreground" Value="#8B0000"/>
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="CheckBox" x:Key="CheckBoxLarge">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="CheckBox">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<Grid>
								<Polyline x:Name="Check" Points="0,10 5,15 15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#E5E5E5" StrokeThickness="2"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Check" Property="Stroke" Value="#008B00"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="CheckBox" x:Key="CheckBoxSmall">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="CheckBox">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<Grid>
								<Polyline x:Name="Check" Points="0,10 5,15 15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#E5E5E5" StrokeThickness="2"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Check" Property="Stroke" Value="#008B00"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Expander">
			<Setter Property="IsExpanded" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Expander">
						<DockPanel>
							<Grid DockPanel.Dock="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="1*"/>
									<ColumnDefinition Width="40"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0" Height="40" Content="{TemplateBinding Property=Header}"/>
								<ToggleButton Grid.Column="1" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
							<ContentPresenter x:Name="Content" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="True">
								<Setter TargetName="Content" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="ToggleButton">
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ToggleButton">
								<Grid>
									<ContentPresenter Grid.Column="0" ContentSource="Content"/>
									<Border x:Name="ExpandButton" Grid.Column="1" Visibility="Visible">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 10,10 0,20" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
									<Border x:Name="CollapseButton" Grid.Column="1" Visibility="Collapsed">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 10,10 20,0" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="CollapseButton" Property="Background" Value="#E5E5E5"/>
										<Setter TargetName="ExpandButton" Property="Background" Value="#E5E5E5"/>
									</Trigger>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="CollapseButton" Property="Visibility" Value="Visible"/>
										<Setter TargetName="ExpandButton" Property="Visibility" Value="Collapsed"/>
									</Trigger>
								</ControlTemplate.Triggers>
								<ControlTemplate.Resources>
									<Style TargetType="Border">
										<Setter Property="Background" Value="#00000000"/>
									</Style>
								</ControlTemplate.Resources>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Expander" x:Key="PrimaryHeader">
			<Setter Property="IsExpanded" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Expander">
						<DockPanel>
							<Grid DockPanel.Dock="Top" Visibility="{TemplateBinding Property=Tag, Converter={StaticResource ResourceKey=LinkExpanderVisibility}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="1*"/>
									<ColumnDefinition Width="40"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0" Height="40" Content="{TemplateBinding Property=Header}"/>
								<ToggleButton Grid.Column="1" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
							<ContentPresenter x:Name="Content" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="True">
								<Setter TargetName="Content" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="ToggleButton">
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ToggleButton">
								<Grid>
									<ContentPresenter Grid.Column="0" ContentSource="Content"/>
									<Border x:Name="ExpandButton" Grid.Column="1" Visibility="Visible">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 10,10 0,20" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
									<Border x:Name="CollapseButton" Grid.Column="1" Visibility="Collapsed">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 10,10 20,0" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="CollapseButton" Property="Background" Value="#E5E5E5"/>
										<Setter TargetName="ExpandButton" Property="Background" Value="#E5E5E5"/>
									</Trigger>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="CollapseButton" Property="Visibility" Value="Visible"/>
										<Setter TargetName="ExpandButton" Property="Visibility" Value="Collapsed"/>
									</Trigger>
								</ControlTemplate.Triggers>
								<ControlTemplate.Resources>
									<Style TargetType="Border">
										<Setter Property="Background" Value="#00000000"/>
									</Style>
								</ControlTemplate.Resources>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Expander" x:Key="SecondaryHeader">
			<Setter Property="IsExpanded" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Expander">
						<DockPanel>
							<Grid DockPanel.Dock="Top" Margin="0,0,5,0" Visibility="{TemplateBinding Property=Tag, Converter={StaticResource ResourceKey=LinkExpanderVisibility}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="1*"/>
									<ColumnDefinition Width="30"/>
								</Grid.ColumnDefinitions>
								<ContentPresenter Grid.Column="0" Margin="45,0,0,0" Height="30" Content="{TemplateBinding Property=Header}"/>
								<ToggleButton Grid.Column="1" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
							<ContentPresenter x:Name="Content" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="True">
								<Setter TargetName="Content" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="ToggleButton">
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ToggleButton">
								<Grid>
									<ContentPresenter Grid.Column="0" ContentSource="Content"/>
									<Border x:Name="ExpandButton" Grid.Column="1" Visibility="Visible">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 5,5 0,10" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
									<Border x:Name="CollapseButton" Grid.Column="1" Visibility="Collapsed">
										<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
											<Polyline Points="0,0 5,5 10,0" Stroke="#19223F" StrokeThickness="1"/>
										</Grid>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter TargetName="CollapseButton" Property="Background" Value="#E5E5E5"/>
										<Setter TargetName="ExpandButton" Property="Background" Value="#E5E5E5"/>
									</Trigger>
									<Trigger Property="IsChecked" Value="True">
										<Setter TargetName="CollapseButton" Property="Visibility" Value="Visible"/>
										<Setter TargetName="ExpandButton" Property="Visibility" Value="Collapsed"/>
									</Trigger>
								</ControlTemplate.Triggers>
								<ControlTemplate.Resources>
									<Style TargetType="Border">
										<Setter Property="Background" Value="#00000000"/>
									</Style>
								</ControlTemplate.Resources>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Frame">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="NavigationUIVisibility" Value="Hidden"/>
			<Setter Property="Margin" Value="10,0,10,10"/>
		</Style>
		<Style TargetType="ItemsControl">
			<Setter Property="Focusable" Value="False"/>
		</Style>
		<Style TargetType="Popup">
			<Setter Property="AllowsTransparency" Value="True"/>
			<Setter Property="Placement" Value="Mouse"/>
			<Setter Property="StaysOpen" Value="False"/>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="Background" Value="#FFFFFF"/>
					<Setter Property="BorderBrush" Value="#E5E5E5"/>
					<Setter Property="BorderThickness" Value="5"/>
					<Setter Property="CornerRadius" Value="5"/>
					<Setter Property="Padding" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="Foreground" Value="#19223F"/>
					<Setter Property="HorizontalAlignment" Value="Left"/>
					<Setter Property="VerticalAlignment" Value="Bottom"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="RadioButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<TextBlock x:Name="Content" Text="{TemplateBinding Property=Content}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Content" Property="Foreground" Value="#FFFFFF"/>
								<Setter TargetName="Border" Property="Background" Value="#19223F"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="Foreground" Value="#19223F"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="RadioButton" x:Key="ColourButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Border" Property="BorderBrush" Value="#19223F"/>
								<Setter TargetName="Border" Property="BorderThickness" Value="3"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="BorderBrush" Value="#666666"/>
					<Setter Property="BorderThickness" Value="1.5"/>
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="RadioButton" x:Key="SidepanelButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RadioButton">
						<Grid>
							<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
								<StackPanel>
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
									<TextBlock Text="{TemplateBinding Property=Tag}"/>
								</StackPanel>
							</Border>
							<Rectangle x:Name="Rectangle"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#070D23"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#070D23"/>
								<Setter TargetName="Rectangle" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="icon:IconBlock">
					<Setter Property="FontSize" Value="20"/>
					<Setter Property="Foreground" Value="#FFFFFF"/>
					<Setter Property="TextAlignment" Value="Center"/>
					<Setter Property="Width" Value="50"/>
				</Style>
				<Style TargetType="Rectangle">
					<Setter Property="Fill" Value="#FFFFFF"/>
					<Setter Property="Height" Value="20"/>
					<Setter Property="HorizontalAlignment" Value="Left"/>
					<Setter Property="Margin" Value="5,0,0,0"/>
					<Setter Property="RadiusX" Value="1.5"/>
					<Setter Property="RadiusY" Value="1.5"/>
					<Setter Property="Visibility" Value="Collapsed"/>
					<Setter Property="Width" Value="3"/>
				</Style>
				<Style TargetType="StackPanel">
					<Setter Property="Orientation" Value="Horizontal"/>
					<Setter Property="Width" Value="140"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="Foreground" Value="#FFFFFF"/>
					<Setter Property="HorizontalAlignment" Value="Left"/>
					<Setter Property="Margin" Value="1,0,0,0"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="Rectangle" x:Key="HorizontalGridline">
			<Setter Property="Fill" Value="#19223F"/>
			<Setter Property="Height" Value="1"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
		</Style>
		<Style TargetType="Rectangle" x:Key="HorizontalGridlineTop">
			<Setter Property="Fill" Value="#19223F"/>
			<Setter Property="Height" Value="1"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
		</Style>
		<Style TargetType="Rectangle" x:Key="VerticalGridline">
			<Setter Property="Fill" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="Width" Value="1"/>
		</Style>
		<Style TargetType="Rectangle" x:Key="VerticalGridlineLeft">
			<Setter Property="Fill" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Left	"/>
			<Setter Property="Width" Value="1"/>
		</Style>
		<Style TargetType="Rectangle" x:Key="Underline">
			<Setter Property="Fill" Value="#E5E5E5"/>
			<Setter Property="Height" Value="5"/>
			<Setter Property="Margin" Value="10,-2.5,10,0"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
		</Style>
		<Style TargetType="StackPanel" x:Key="HorizontalPanel">
			<Setter Property="Orientation" Value="Horizontal"/>
		</Style>
		<Style TargetType="StackPanel" x:Key="VerticalPanel">
			<Setter Property="Margin" Value="5,0"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBlock">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Date">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="Margin" Value="5"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="DefaultHeader">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="Margin" Value="5,0,5,0"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Header">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Margin" Value="5,0,5,0"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="PageTitle">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Priority">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#8B0000"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="SidePanelTitle">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#FFFFFF"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Subtitle">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#666666"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="SubtitleCentred">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#666666"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Subheader">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#666666"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Margin" Value="5,0,5,0"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="TimerText">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="140"/>
			<Setter Property="FontWeight" Value="Light"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="TimeText">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="Title">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBlock" x:Key="TitleCentred">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="TextAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>
		<Style TargetType="TextBox">
			<Setter Property="FontFamily" Value="Roboto"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Foreground" Value="#19223F"/>
			<Setter Property="Margin" Value="0,5,0,5"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="TextWrapping" Value="NoWrap"/>
		</Style>
		<Style TargetType="ToggleButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid>
							<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
								<TextBlock x:Name="Content" Text="{TemplateBinding Property=Content}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F2F2F2"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Content" Property="Foreground" Value="#FFFFFF"/>
								<Setter TargetName="Border" Property="Background" Value="#19223F"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="Foreground" Value="#19223F"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="ToggleButton" x:Key="MaximiseButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Grid>
							<Border x:Name="MaximiseButton" Visibility="Visible" Background="#00000000">
								<Rectangle Width="12" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1"/>
							</Border>
							<Border x:Name="NormalButton" Visibility="Collapsed" Background="#00000000">
								<Grid>
									<Rectangle x:Name="Icon1" Width="12" Height="10" Margin="2,0,0,2" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1" Fill="#E5E5E5"/>
									<Rectangle x:Name="Icon2" Width="12" Height="10" Margin="0,2,2,0" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#19223F" StrokeThickness="1" Fill="#E5E5E5"/>
								</Grid>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="MaximiseButton" Property="Background" Value="#F2F2F2"/>
								<Setter TargetName="NormalButton" Property="Background" Value="#F2F2F2"/>
								<Setter TargetName="Icon1" Property="Fill" Value="#F2F2F2"/>
								<Setter TargetName="Icon2" Property="Fill" Value="#F2F2F2"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="MaximiseButton" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="NormalButton" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="ToggleButton" x:Key="SidepanelToggleButton">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Height" Value="40"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border x:Name="Border" Background="{TemplateBinding Property=Background}">
							<Grid>
								<StackPanel x:Name="CollapseButton" Visibility="Visible">
									<icon:IconBlock Icon="ChevronLeft"/>
									<TextBlock Text="collapse"/>
								</StackPanel>
								<StackPanel x:Name="ExpandButton" Visibility="Collapsed">
									<icon:IconBlock Icon="ChevronRight"/>
								</StackPanel>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#070D23"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="CollapseButton" Property="Visibility" Value="Collapsed"/>
								<Setter TargetName="ExpandButton" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="icon:IconBlock">
					<Setter Property="FontSize" Value="20"/>
					<Setter Property="Foreground" Value="#FFFFFF"/>
					<Setter Property="TextAlignment" Value="Center"/>
					<Setter Property="Width" Value="50"/>
				</Style>
				<Style TargetType="Rectangle">
					<Setter Property="Fill" Value="#FFFFFF"/>
					<Setter Property="Height" Value="20"/>
					<Setter Property="HorizontalAlignment" Value="Left"/>
					<Setter Property="Margin" Value="5,0,0,0"/>
					<Setter Property="RadiusX" Value="1.5"/>
					<Setter Property="RadiusY" Value="1.5"/>
					<Setter Property="Visibility" Value="Collapsed"/>
					<Setter Property="Width" Value="3"/>
				</Style>
				<Style TargetType="StackPanel">
					<Setter Property="Orientation" Value="Horizontal"/>
					<Setter Property="Width" Value="140"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="Foreground" Value="#FFFFFF"/>
					<Setter Property="HorizontalAlignment" Value="Left"/>
					<Setter Property="Margin" Value="1,0,0,0"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="ToggleButton" x:Key="StartStopButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToggleButton">
						<Border x:Name="Border" Background="#80F080">
							<TextBlock x:Name="Text" Text="start" Foreground="#008B00"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#F08080"/>
								<Setter TargetName="Text" Property="Foreground" Value="#8B0000"/>
								<Setter TargetName="Text" Property="Text" Value="stop"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Resources>
				<Style TargetType="Border">
					<Setter Property="CornerRadius" Value="5"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="Foreground" Value="#008B00"/>
					<Setter Property="FontFamily" Value="Roboto"/>
					<Setter Property="FontSize" Value="14"/>
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Style.Resources>
		</Style>
		<Style TargetType="ScrollViewer">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="VerticalScrollBarVisibility" Value="{DynamicResource ResourceKey=ScrollBarVisibility}"/>
			<Style.Resources>
				<Style TargetType="ScrollBar">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ScrollBar">
								<Grid Width="8" Background="#00000000">
									<Track x:Name="PART_Track" IsDirectionReversed="True">
										<Track.Thumb>
											<Thumb x:Name="Thumb" Background="#666666"/>
										</Track.Thumb>
									</Track>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger SourceName="Thumb" Property="IsMouseOver" Value="True">
										<Setter TargetName="Thumb" Property="Background" Value="#555555"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Resources>
						<Style TargetType="Thumb">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="Thumb">
										<Border CornerRadius="4" Background="{TemplateBinding Property=Background}"/>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Style.Resources>
				</Style>
			</Style.Resources>
		</Style>
	</Application.Resources>
</Application>